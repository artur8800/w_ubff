.container {
    margin: 0 auto;
    min-width: 320px;
    max-width: 1200px;
}

@media #{$medium-only} {
    .container {
        padding-left: 16px;
        padding-right: 16px;
    }
    .row {
        margin-left: -8px;
        margin-right: -8px;
    }
}

@media #{$medium-and-down} {
    .container {
        padding-left: 16px;
        padding-right: 16px;
    }
    .row {
        margin-left: -8px;
        margin-right: -8px;
    }
}

@media #{$large-and-up} {
    .container {
        padding-left: (1 * $gutter-width / 2);
        padding-right: (1 * $gutter-width / 2);
    }
    .row {
        margin-left: (-1 * $gutter-width / 2);
        margin-right: (-1 * $gutter-width / 2);
    }
}

.section {
    padding-top: 1rem;
    padding-bottom: 1rem;
    &.no-pad {
        padding: 0;
    }
    &.no-pad-bot {
        padding-bottom: 0;
    }
    &.no-pad-top {
        padding-top: 0;
    }
}

// Mixins to eliminate code repitition
@mixin reset-offset {
    margin-left: auto;
    left: auto;
    right: auto;
}

@mixin grid-classes($size, $i, $perc) {
    &.offset-#{$size}#{$i} {
        margin-left: $perc;
    }
    &.pull-#{$size}#{$i} {
        right: $perc;
    }
    &.push-#{$size}#{$i} {
        left: $perc;
    }
}

.row {
    // Clear floating children
    &:after {
        content: "";
        display: table;
        clear: both;
    }
    .col {
        float: left;
        box-sizing: border-box;
        min-height: 1px;
        &[class*="push-"],
        &[class*="pull-"] {
            position: relative;
        }
        $i: 1;
        @while $i <=$num-cols-small {
            $perc: unquote((100 / ($num-cols-small / $i)) + "%");
            &.s#{$i} {
                width: $perc;
                padding: 0 $gutter-width-small / 2;
                @include reset-offset;
            }
            $i: $i+1;
        }
        $i: 1;
        @while $i <=$num-cols-small {
            $perc: unquote((100 / ($num-cols-small / $i)) + "%");
            @include grid-classes("s", $i, $perc);
            $i: $i + 1;
        }
        @media #{$medium-and-up} {
            $i: 1;
            @while $i <=$num-cols-medium {
                $perc: unquote((100 / ($num-cols-medium / $i)) + "%");
                &.m#{$i} {
                    width: $perc;
                    padding: 0 $gutter-width-small / 2;
                    @include reset-offset;
                }
                $i: $i+1;
            }
            $i: 1;
            @while $i <=$num-cols-medium {
                $perc: unquote((100 / ($num-cols-medium / $i)) + "%");
                @include grid-classes("m", $i, $perc);
                $i: $i + 1;
            }
        }
        @media #{$large-and-up} {
            $i: 1;
            @while $i <=$num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");
                &.l#{$i} {
                    width: $perc;
                    padding: 0 $gutter-width / 2;
                    @include reset-offset;
                }
                $i: $i+1;
            }
            $i: 1;
            @while $i <=$num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");
                @include grid-classes("l", $i, $perc);
                $i: $i + 1;
            }
        }
        @media #{$extra-large-and-up} {
            $i: 1;
            @while $i <=$num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");
                &.xl#{$i} {
                    width: $perc;
                    padding: 0 $gutter-width / 2;
                    @include reset-offset;
                }
                $i: $i+1;
            }
            $i: 1;
            @while $i <=$num-cols {
                $perc: unquote((100 / ($num-cols / $i)) + "%");
                @include grid-classes("xl", $i, $perc);
                $i: $i + 1;
            }
        }
    }
}